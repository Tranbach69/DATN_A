// <auto-generated />
using System;
using DATN.Infastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DATN.Infastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("DATN.Core.Entities.AccountAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<DateTime>("TimingCreate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimingDelete")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimingUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AccountAdmin");
                });

            modelBuilder.Entity("DATN.Core.Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("EquipmentShop")
                        .HasColumnType("text");

                    b.Property<int>("EthernetId")
                        .HasColumnType("integer");

                    b.Property<int>("GpsId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Lte4gId")
                        .HasColumnType("integer");

                    b.Property<string>("MacAddress")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimingCreate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimingDelete")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimingUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.Property<DateTime>("WarrantyPeriod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("WifiId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("DATN.Core.Entities.Ethernet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DriverType")
                        .HasColumnType("text");

                    b.Property<string>("EthernetIp")
                        .HasColumnType("text");

                    b.Property<int>("EthernetOfDeviceId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LanCtrl")
                        .HasColumnType("text");

                    b.Property<string>("LanMode")
                        .HasColumnType("text");

                    b.Property<string>("MacAddress")
                        .HasColumnType("text");

                    b.Property<DateTime>("TimingCreate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimingDelete")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimingUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("EthernetOfDeviceId")
                        .IsUnique();

                    b.ToTable("Ethernet");
                });

            modelBuilder.Entity("DATN.Core.Entities.Gps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DoubleAltitude")
                        .HasColumnType("text");

                    b.Property<string>("DoubleLatitude")
                        .HasColumnType("text");

                    b.Property<string>("DoubleLongitude")
                        .HasColumnType("text");

                    b.Property<string>("FloatAccuracy")
                        .HasColumnType("text");

                    b.Property<string>("FloatSpeed")
                        .HasColumnType("text");

                    b.Property<int>("GpsOfDeviceId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("MacAddress")
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .HasColumnType("text");

                    b.Property<DateTime>("TimingCreate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimingDelete")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimingUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("GpsOfDeviceId")
                        .IsUnique();

                    b.ToTable("Gps");
                });

            modelBuilder.Entity("DATN.Core.Entities.Lte4g", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Current4gData")
                        .HasColumnType("text");

                    b.Property<string>("FregBand")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LocationArea")
                        .HasColumnType("text");

                    b.Property<int>("Lte4gOfDeviceId")
                        .HasColumnType("integer");

                    b.Property<string>("MacAddress")
                        .HasColumnType("text");

                    b.Property<string>("MobileCountryMode")
                        .HasColumnType("text");

                    b.Property<string>("MobileNetworkMode")
                        .HasColumnType("text");

                    b.Property<string>("NetworkMode")
                        .HasColumnType("text");

                    b.Property<string>("NetworkProvider")
                        .HasColumnType("text");

                    b.Property<string>("OperationMode")
                        .HasColumnType("text");

                    b.Property<string>("Rssi4g")
                        .HasColumnType("text");

                    b.Property<string>("ServiceCellId")
                        .HasColumnType("text");

                    b.Property<string>("SimCardPhone")
                        .HasColumnType("text");

                    b.Property<string>("SimCardState")
                        .HasColumnType("text");

                    b.Property<string>("SimCardStatus")
                        .HasColumnType("text");

                    b.Property<string>("SimCardType")
                        .HasColumnType("text");

                    b.Property<string>("SystemMode")
                        .HasColumnType("text");

                    b.Property<DateTime>("TimingCreate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimingDelete")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimingUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Lte4gOfDeviceId")
                        .IsUnique();

                    b.ToTable("Lte4g");
                });

            modelBuilder.Entity("DATN.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("MacAddress")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<DateTime>("TimingCreate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimingDelete")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimingUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DATN.Core.Entities.Wifi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AuthType")
                        .HasColumnType("text");

                    b.Property<string>("BroadCast")
                        .HasColumnType("text");

                    b.Property<string>("Channel")
                        .HasColumnType("text");

                    b.Property<string>("ChannelMode")
                        .HasColumnType("text");

                    b.Property<int>("ClientCount")
                        .HasColumnType("integer");

                    b.Property<string>("CurrentAp")
                        .HasColumnType("text");

                    b.Property<string>("DhcpEndIp")
                        .HasColumnType("text");

                    b.Property<string>("DhcpHostIp")
                        .HasColumnType("text");

                    b.Property<string>("DhcpStartIp")
                        .HasColumnType("text");

                    b.Property<string>("DhcpTime")
                        .HasColumnType("text");

                    b.Property<string>("EncryptMode")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Iso")
                        .HasColumnType("text");

                    b.Property<string>("MacAdd")
                        .HasColumnType("text");

                    b.Property<string>("MacAddress")
                        .HasColumnType("text");

                    b.Property<string>("MacCount")
                        .HasColumnType("text");

                    b.Property<string>("Mode")
                        .HasColumnType("text");

                    b.Property<string>("NatType")
                        .HasColumnType("text");

                    b.Property<string>("Pwd")
                        .HasColumnType("text");

                    b.Property<string>("Ssid")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<DateTime>("TimingCreate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimingDelete")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TimingUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("WifiOfDeviceId")
                        .HasColumnType("integer");

                    b.Property<string>("WpsEnable")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("WifiOfDeviceId")
                        .IsUnique();

                    b.ToTable("Wifi");
                });

            modelBuilder.Entity("DATN.Core.Entities.Device", b =>
                {
                    b.HasOne("DATN.Core.Entities.User", "User")
                        .WithMany("Devices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DATN.Core.Entities.Ethernet", b =>
                {
                    b.HasOne("DATN.Core.Entities.Device", "Device")
                        .WithOne("Ethernet")
                        .HasForeignKey("DATN.Core.Entities.Ethernet", "EthernetOfDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("DATN.Core.Entities.Gps", b =>
                {
                    b.HasOne("DATN.Core.Entities.Device", "Device")
                        .WithOne("Gps")
                        .HasForeignKey("DATN.Core.Entities.Gps", "GpsOfDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("DATN.Core.Entities.Lte4g", b =>
                {
                    b.HasOne("DATN.Core.Entities.Device", "Device")
                        .WithOne("Lte4g")
                        .HasForeignKey("DATN.Core.Entities.Lte4g", "Lte4gOfDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("DATN.Core.Entities.Wifi", b =>
                {
                    b.HasOne("DATN.Core.Entities.Device", "Device")
                        .WithOne("Wifi")
                        .HasForeignKey("DATN.Core.Entities.Wifi", "WifiOfDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("DATN.Core.Entities.Device", b =>
                {
                    b.Navigation("Ethernet");

                    b.Navigation("Gps");

                    b.Navigation("Lte4g");

                    b.Navigation("Wifi");
                });

            modelBuilder.Entity("DATN.Core.Entities.User", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
